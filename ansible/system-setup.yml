---
- hosts: localhost
  become: yes

  tasks:
    
    - name: Detect arch
      set_fact:
        deb_arch: "{% if ( ansible_facts['architecture'] == 'armv7l' ) %}armhf{% elif ( ansible_facts['architecture'] == 'aarch64' ) %}arm64{% else %}amd64{% endif %}"

    - name: Detect raspi-config
      stat:
        path: /usr/bin/raspi-config
      register: raspi_config    

    - name: Detect codename
      set_fact:
        deb_codename: "{{ ansible_facts['lsb']['codename'] }}"

    - name: Set locale
      script:
        cmd: "/usr/bin/raspi-config nonint do_change_timezone {{ tz }}"
      when: raspi_config.stat.exists

    - name: Set timezone
      script:
        cmd: "/usr/bin/raspi-config nonint do_change_locale {{ locale }}"
      when: raspi_config.stat.exists

    - name: Set wifi country
      script:
        cmd: "/usr/bin/raspi-config nonint do_wifi_country {{ wifi }}"
      when: raspi_config.stat.exists

    - name: Set memory split
      script:
        cmd: "/usr/bin/raspi-config nonint do_memory_split {{ gpu_mem }}"
      when: raspi_config.stat.exists

    - name: Add docker apt key
      ansible.builtin.shell:
        cmd: "curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/docker-ce-archive-keyring.gpg > /dev/null"
        creates: /usr/share/keyrings/docker-ce-archive-keyring.gpg

    - name: Add docker repository
      ansible.builtin.apt_repository:
        update_cache: no
        filename: docker-ce
        repo: "deb [arch={{ deb_arch }} signed-by=/usr/share/keyrings/docker-ce-archive-keyring.gpg] https://download.docker.com/linux/debian {{ deb_codename }} stable"

    - name: Add netdata apt key
      ansible.builtin.shell:
        cmd: "curl -fsSL https://packagecloud.io/netdata/netdata/gpgkey | gpg --dearmor | sudo tee /usr/share/keyrings/netdata-archive-keyring.gpg > /dev/null"
        creates: /usr/share/keyrings/netdata-archive-keyring.gpg

    - name: Add netdata repository
      ansible.builtin.apt_repository:
        update_cache: no
        filename: netdata
        # netdata doesn't have an explicit raspbian release so defaulting to debian
        repo: "deb [arch={{ deb_arch }} signed-by=/usr/share/keyrings/netdata-archive-keyring.gpg] https://packagecloud.io/netdata/netdata/debian {{ deb_codename }} main"

    - name: Prevent packages.microsoft.com from resolving
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: 0.0.0.0 packages.microsoft.com
        state: present
        regexp: 'packages.microsoft.com$'
    
    - name: Untrust Microsoft key
      copy:
        content: ""
        dest: /etc/apt/trusted.gpg.d/microsoft.gpg
        mode: a-w

    - name: Remove VSCode package source
      copy:
        content: ""
        dest: /etc/apt/sources.list.d/vscode.list
        mode: a-w

    - name: Update apt-get repo and cache
      apt:
        update_cache: yes
        force_apt_get: yes
        cache_valid_time: 3600

    - name: Upgrade all apt packages
      apt:
        upgrade: dist
        force_apt_get: yes
        
    - name: Install packages
      apt:
        pkg:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - apt-transport-https
          - avahi-daemon
          - libnss-mdns
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - python3-pip
          - netdata
          - haveged
          - powertop
          - apache2-utils
          - emacs-nox
          - elpa-yaml-mode
        state: latest

    - name: Add Netdata user to Docker group
      user:
        name: netdata
        groups: docker,netdata
        append: yes
      notify:
        - Restart Netdata
        
    - name: Make Netdata available on the LAN
      ansible.builtin.lineinfile:
        path: /etc/netdata/netdata.conf
        line: "\tbind to = *"
        state: present
        regexp: 'bind to ='
      notify:
        - Restart Netdata
          
    - name: Install docker-compose
      pip:
        name: docker-compose
        state: latest

    - name: Add pi user to docker group
      user:
        name: pi
        groups: docker
        append: yes

    - name: Configure PowerTOP auto tune
      copy:
        content: |
          [Unit]
          Description=PowerTOP auto tune

          [Service]
          Type=oneshot
          ExecStart=/usr/sbin/powertop --auto-tune

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/powertop.service

    - name: Install PowerTOP auto tune
      ansible.builtin.systemd:
        state: started
        enabled: yes
        name: powertop.service

  handlers:
    - name: Restart Netdata
      systemd:
        name: netdata
        state: restarted
