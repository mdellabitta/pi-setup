---
- hosts: pis
  become: yes
  gather_facts: no
  tasks:

    # System setup
    
    - name: Set hostname
      ansible.builtin.hostname:
        name: "{{ pi_hostname }}"

    - name: Edit hostname into hosts
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "127.0.0.1 localhost {{ pi_hostname }}"
        state: present
        regexp: '^127\.0\.0\.1'

    - name: Set time zone
      ansible.builtin.lineinfile:
        path: /etc/environment
        line: "TZ=\"{{ tz }}\""      

    # Enable swap
    
    - name: Set swap_file and swap_space variables
      ansible.builtin.set_fact:
        swap_space: 2147483648
        swap_file: /mnt/swapfile

    - name: Check if swap file exists
      ansible.builtin.stat:
        path: "{{ swap_file }}"
      register: swap_file_check

    - name: Create swap file
      command:
        cmd: "fallocate -l {{ swap_space }} {{ swap_file }}"
      when: not swap_file_check.stat.exists

    - name: Set permissions on swap file
      ansible.builtin.file:
        path: "{{ swap_file }}"
        mode: 0600

    - name: Format swap file
      command:
        cmd: "mkswap {{ swap_file }}"
      when: not swap_file_check.stat.exists

    - name: Add to fstab
      ansible.builtin.lineinfile:
        dest: /etc/fstab
        regexp: "{{ swap_file }}"
        line: "{{ swap_file }} none swap sw 0 0"

    - name: Turn on swap
      command:
        cmd: "swapon -a"
        
    # Install and setup system packages
        
    - name: Add docker apt key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88

    - name: Add docker repository
      ansible.builtin.apt_repository:
        update_cache: no
        repo: deb [arch=arm64] https://download.docker.com/linux/ubuntu focal stable

    - name: Add netdata apt key
      ansible.builtin.apt_key:
        url: https://packagecloud.io/netdata/netdata/gpgkey 
        id: 54832F89F09FED90

    - name: Add netdata repository
      ansible.builtin.apt_repository:
        update_cache: no
        repo: deb [arch=arm64] https://packagecloud.io/netdata/netdata/ubuntu/ focal main
        
    - name: Update apt-get repo and cache
      apt:
        update_cache: yes
        force_apt_get: yes
        cache_valid_time: 3600

    - name: Upgrade all apt packages
      apt:
        upgrade: dist
        force_apt_get: yes
    
    - name: Install packages
      apt:
        pkg:
          - avahi-daemon
          - libnss-mdns
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - python3-pip
          - netdata
          - haveged
          - powertop
          - libraspberrypi-bin
        state: latest
        
    - name: Install docker-compose
      pip:
        name: docker-compose
        state: latest

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    # Power consumption tuning

    - name: Configure PowerTOP auto tune
      copy:
        content: |
          [Unit]
          Description=PowerTOP auto tune

          [Service]
          Type=oneshot
          ExecStart=/usr/sbin/powertop --auto-tune

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/powertop.service

    - name: Install PowerTOP auto tune
      ansible.builtin.systemd:
        state: started
        enabled: yes
        name: powertop.service
      
    # Disable Canonical login messages       

    - name: Disable motd-news
      copy:
        content: "ENABLED=0"
        dest: /etc/default/motd-news
        owner: root
        group: root
        mode: u=rw,g=r,o=r
        
    - name: Disable spammy motd bits
      file: dest="{{item}}" mode=a-x
      loop:
        - /etc/update-motd.d/10-help-text 
        - /etc/update-motd.d/50-motd-news

    - name: Disable motd.timer
      ansible.builtin.systemd:
        state: stopped
        enabled: no
        name: motd-news.timer

    # Fix ubuntu's DNS situation so we get port 53 back
    
    - name: Disable DNSStubListener
      community.general.ini_file:
        path: /etc/systemd/resolved.conf
        section: Resolve
        option: DNSStubListener
        value: "no"
        
    - name: Restart resolved.service
      ansible.builtin.systemd:
        state: restarted
        name: systemd-resolved.service

    - name: Check if resolvd.conf exists
      stat:
        path: "{{ item }}"
      with_items:
        - /etc/resolv.conf
      register: check_file_name

    - name: Move resolvd.conf to resolvd.conf.bak
      command: mv "{{ item.stat.path }}" "{{destpath}}"
      with_items:
        - "{{ check_file_name.results }}"
      when: item.stat.exists == true and not item.stat.islnk
        
    - name: Link systemd resolvd.conf
      file:
        src: /run/systemd/resolve/resolv.conf
        dest: /etc/resolv.conf
        state: link

