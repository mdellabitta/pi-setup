services:

  unifi-mongo:
    image: mongo:4.4.18
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - /var/unifi-mongo:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    restart: unless-stopped
    networks:
      - unifi-internal

  unifi-network-application:
    depends_on:
      - unifi-mongo
    environment:
      - MONGO_HOST=unifi-mongo
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASS=${MONGO_PASS}
      - MONGO_PORT=27017
      - MONGO_DBNAME=unifi
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - MEM_LIMIT=${MEM_LIMIT}
      - MEM_STARTUP=${MEM_STARTUP}
    image: lscr.io/linuxserver/unifi-network-application:latest
    container_name: unifi-network-application
    volumes:
      - /var/unifi-network-application:/config
    ports:
      - 3478:3478/udp #stun
      - 10001:10001/udp #device discovery
      - 8080:8080
      - 8443:8443
    restart: unless-stopped
    networks:
      - traefik_public
      - unifi-internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.unifi.rule=Host(`${TRAEFIK_HOST}`)"
      - "traefik.http.routers.unifi.entrypoints=websecure"
      - "traefik.http.routers.unifi.tls=true"
      - "traefik.http.services.unifi.loadbalancer.server.port=8443"
      - "traefik.http.services.unifi.loadbalancer.server.scheme=https"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"

networks:
  traefik_public:
    external: true
  unifi-internal:
